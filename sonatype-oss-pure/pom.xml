<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.example</groupId>
        <artifactId>sonatype-build</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <!-- 项目信息 -->
    <!-- 组 id：必须和你申请时的一致 -->
    <groupId>io.github.dripWaterArun</groupId>
    <!--工件 id：每个项目的 id 都不一样-->
    <artifactId>sonatype-oss-pure</artifactId>
<!--    <artifactId>sonatype-nexus-parent</artifactId>-->
    <!--
        版本:
        1.稳定版：RELEASE
        2.快照版：SNAPSHOT
    -->
    <version>1.2.8-RELEASE</version>

    <!-- 项目设定 -->
    <properties>
        <!--指定项目源码 jdk 版本-->
        <jdk.version>18</jdk.version>
        <maven.compiler.source>${jdk.version}</maven.compiler.source>
        <maven.compiler.target>${jdk.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!--父工程使用 pom -->
    <packaging>pom</packaging>
    <!--项目名称-->
    <name>sonatype-nexus-parent</name>
    <!--描述-->
    <description>上传到 mavne 中央仓库 nexus 仓库共通父级</description>

    <!--项目地址-->
    <url>https://github.com/dripWaterArun/sonatype-nexus-parent</url>
    <inceptionYear>2023</inceptionYear>

    <!--组织-->
    <organization>
        <name>Arun Group</name>
        <url>https://github.com/dripWaterArun</url>
    </organization>

    <!-- 开发者信息，根据实际情况修改 -->
    <developers>
        <developer>
            <!--开发者名-->
            <name>戴煦</name>
            <!--邮箱-->
            <email>daixu_arun@sina.com</email>
            <!--开发者主页-->
            <url>https://github.com/dripWaterArun</url>
        </developer>
    </developers>


    <!-- 仓库信息，根据实际情况修改 -->
    <scm>
        <!--项目 git 仓库地址-->
        <url>https://github.com/dripWaterArun/sonatype-nexus-parent</url>
        <!-- connection 与 developerConnection 写一个就可以-->
        <!--项目 git 克隆地址(只读) RELEASE 版本-->
        <connection>https://github.com/dripWaterArun/sonatype-nexus-parent.git</connection>
        <!--项目 git 克隆地址（读写）SNAPSHOT 版本-->
        <!--        <developerConnection>https://github.com/dripWaterArun/sonatype-nexus-parent.git</developerConnection>-->
    </scm>

    <!-- 许可证信息，这里是 Apache 2.0 的许可证，根据实际情况修改 -->
    <licenses>
        <license>
            <name>The Apache Software License, Version2.0</name>
            <url>https://www.apache.org/licenses/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--发布到中央仓库的版本：默认发快照版本-->
<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>sonatype-nexus-releases</id>-->
<!--            <name>Sonatype Nexus Releases</name>-->
<!--            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
<!--    </repositories>-->

    <!--定义 snapshots 库和 releases 库的 nexus 地址-->
    <distributionManagement>

        <!--SNAPSHOTS：快照版本 -->
        <snapshotRepository>
            <id>ossrh</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>

        <!--RELEASES：稳定版本 -->
        <repository>
            <id>ossrh</id>
            <name>Nexus Release Repository</name>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>

    </distributionManagement>

    <build>

        <plugins>
            <!--
                Nexus 插件：sonatype 官网提供，部署到 OSSRH Nexus 存储库管理器插件
                RELEASES 稳定版发布必须要用的插件，上传jar包到仓库的插件
            -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.13</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <!--发布模式开关：false 手动发布 true 自动发布-->
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>

            <!-- gpg 插件（必须）：用于签名认证 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- source 插件（选用）：生成 source 文件-->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Javadoc 插件（选用）：生成 Javadoc 文件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>